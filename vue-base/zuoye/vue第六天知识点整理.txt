1.插槽   ****
将子组件的内容解析到 子组件template 对应的 slot的位置
作用：在封装组件或插件时，用于暴露接口给用户使用
	a.分类： 默认插槽、具名插槽(起了名字的插槽)、作用域插槽(可以传参数的插槽)

2.mixin 混入   ****
	封装，如果某些 功能或方法或钩子函数等，在不同的组件中使用了两次以上都需要进行封装，
	封装好的mixin可以被任何组件多次调用
	特点：调用 mixin是copy了一份过来使用，修改的mixin内容，对原mixin没有影响
	
3.自定义指令  ***
	
	定义自定义指令
	Vue.directive('指令名',{
		inserted(){//插入后触发的钩子函数
			
		},
		bind(){//绑定时触发的钩子函数 ，只触发一次
			
		},
		update(){//修改时触发的钩子函数
			
		},
		componentUpdated(){//组件修改后出发的钩子函数
			
		},
		unbind(){//解除绑定时触发的钩子
			
		}
	})
	自定义指令的使用
	<div v-指令名="参数"></div>
	v-指令名  
	
4.	渲染函数 render 

render:function(createElement){//渲染函数
//                           标签名称    //标签内容
return createElement('h'+this.level,this.$slots.default);
}

5.虚拟dom	
虚拟dom：在内存定义一个变量来保存某个dom节点和这个dom节点的子节点以及它的属性，
对虚拟dom的操作操作的是内存而不是真实的dom节点。可以很大程度上的提高性能。
一般会采用 diff算法，计算出虚拟dom和真实dom之间的差别，然后一次性将数据渲染到页面上
	


	
	
	