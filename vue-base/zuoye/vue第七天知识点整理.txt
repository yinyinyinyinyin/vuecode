1.插件
	插件的使用  ****
	a.  npm install --save 插件名
	b.  import 插件名  from  插件的路径
	c.  Vue.use(插件名);     *****
	
	插件的定义：
	var baseplu = {
		install:function(){
			//组件
			Vue.component('组件名',{组件的属性});
			//混入
			Vue.mixin({混入的属性});
			//扩展方法
			Vue.prototype.定义的方法名= function(){
				
			}
			
		}
	}

2.过滤器  ***
	filters:{
		//                  需要过滤的字符串, 过滤器需要使用的参数
		changeUpper:function(value,          arg){
			
		}
	}

3.动画
		a.过渡效果   css中
		b.使用 animate.css
		c.使用 velocity.js


4.  路由  *****
	a.路由的定义：路由就是显示在浏览器地址栏中的url信息，
	通过路由信息可以访问到 对应的组件，展示给用户使用
	b.vue底层路由的分类：hash （路由前会显示#） 、history
	c.基础路由流程
		4-1 定义组件
		4-2 配置路由表
		var routes= [
			{"path":"/路径名","component":组件名},
			{"path":"/路径名/:itemid","component":组件名},
		]
		4-3 创建路由表对象
		var router = new VueRouter({
			routes:routes
		})
		
		4-4 在 根节点注册
		new Vue({
			el:'#app',
			router:router
		})
		
		4-5 插入路由信息  ，相当于 nav 中的a标签
		<router-link to="/路径名">首页</router-link>
	
		动态路由
		<router-link :to="'/路径名/'+itemid">首页</router-link>
		
		4-6 路由的渲染出口
		<router-view></router-view>
		
	d.js中跳转页面
		this.$router.push('/路径名');
		this.$router.go(-1);//返回上一页